#include<iostream>
using namespace std;

class Point
{
	//Создавая структуру или класс мы создаем новый тип данных (пользовательский тип данных)
	//Пользовательские типы являются более сложными, поскольку могу включать в себя множество
	//однотипных или разнотипных значений, которые являются характеристиками и состояниями объектов
	double x;
	double y;
public:
	double get_x()const
	{
		return x;
	}
	double get_y()const
	{
		return y;
	}
	void set_x(double x)
	{
		this->x = x;
		//l-value = r-value;
	}
	void set_y(double y)
	{
		this->y = y;
	}
};

//#define STRUCT_POINT

void main()
{
	setlocale(LC_ALL, "");

#ifdef STRUCT_POINT
	int a;		//Объявление переменной 'a' типа 'int';
	Point A;	//Объявление переменной 'A' типа 'Point';
				//Создание объекта 'A' структуры 'Point';
				//Создание экземпляра 'A' структуры 'Point';
				//'A' is instance of struct 'Point'
				//Instantiate - создать объект.
	A.x = 2;
	A.y = 3;
	cout << A.x << "\t" << A.y << endl;

	Point* pA = &A;
	cout << pA->x << "\t" << pA->y << endl;
#endif // STRUCT_POINT

	Point A;
	A.set_x(2);
	A.set_y(3);
	cout << A.get_x() << "\t" << A.get_y() << endl;

}

/*
-----------------------------------------------------------
.  - Оператор прямого доступа (Point operator)
-> - Оператор косвенного доступа (Arrow operator)
-----------------------------------------------------------
*/

/*
-----------------------------------------------------------
1. Encapsulation:
	Модификаторы доступа
		private:	закрытые поля, доступны только внутри класса		(member-variables);
		public:		открытые поля, доступны из любого меств программы	(member-function);
		protected:	защищенные поля, доступны только внутри класса
					и его дочерних классов;
	get/set-методы:
	get (взять, получить) - эти методы открывают доступ к переменным членам класса на чтение,
							т.е., позволяют получить значение переменно в классе;
	set (задать, установить)эти методы открывают доступ к переменным членам класса на запись,
							т.е., позволяют завать значения закрытых переменных.
							Кроме того, set-методы обеспечивают фильтрацию данных,
							т.е., предотвращают попадание некорретных значений в переменные члены класса.

2. Inheritance;
3. Polymorphism;
-----------------------------------------------------------
*/
/*
-----------------------------------------------------------
this - это указатель на объект, для которого вызывается метод.
-----------------------------------------------------------
*/